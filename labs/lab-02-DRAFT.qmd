---
title: "Lab 02: Ice duration and air temperature in Madison, WI"
subtitle: "Inference for SLR" 
execute:
  freeze: auto
  echo: true
  eval: false
  warning: false
  message: false
---

::: callout-important
Due:

-   Monday, September 19, 11:59pm (Thursday labs)
-   Tuesday, September 20, 11:59pm (Friday labs)
:::

# Introduction

In today's lab, you'll use simple linear regression to analyze the relationship between air temperature and ice duration for two lakes in Wisconsin.

## Learning goals

By the end of the lab you will...

-   Be able to fit a simple linear regression model using R.
-   Be able to interpret the slope and intercept for the model.
-   Be able to use simulation-based inference to draw conclusions about the slope.
-   Continue developing a workflow for reproducible data analysis.

# Getting started

-   Go to the [sta210-fa22](https://www.github.com/sta210-fa22) organization on GitHub. Click on the repo with the prefix **lab-02-**. It contains the starter documents you need to complete the lab.

-   Clone the repo and start a new project in RStudio. See the [Lab 01 instructions](lab-01.qmd) for details on cloning a repo, starting a new project in R, and configuring git.

# Packages

We will use the following packages in today's lab.

```{r load-packages}
#| eval: true
library(tidyverse)
library(tidymodels)
library(lterdatasampler) # contains the data
```

# Data

The data are in the `ntl_icecover` and `ntl_airtemp` data frames in the [lterdatasampler](https://lter.github.io/lterdatasampler/index.html) R package.

To find out more about the dataset, type the following in your console.

    ?ntl_icecover

A question mark before the name of an object will always bring up its help file. This command must be run in the console. Alternatively, you can use the `help()` function.

    help(ntl_icecover)

You can use the same code to find out more about the airtemp data set.

# Exercises

**Goal**: The goal of this analysis is to use the air temperature to understand changes in the ice duration for lakes in Wisconsin. **\[Insert motivation for doing this analysis\].**

------------------------------------------------------------------------

Write all code and narrative in your Quarto file. Write all narrative in complete sentences. Throughout the assignment, you should periodically **render** your Quarto document to produce the updated PDF, **commit** the changes in the Git pane, and **push** the updated files to GitHub.

::: callout-tip
Make sure we can read all of your code in your PDF document. This means you will need to break up long lines of code. One way to help avoid long lines of code is is start a new line after every pipe (`|>`) and plus sign (`+`).
:::

### Exercise 1

Fill in the code below to create a new data frame of the average ice duration by year. How many rows are in the new data frame? How many observations?

```{r}
ntl_icecover_avg <- ntl_icecover %>%
  group_by(____) %>%
  summarise(avg_ice_duration = ice_duration = mean(_____, na.rm  = TRUE))
```

### Exercise 2

Ice duration is most impacted by temperatures in the winter and spring seasons. Fill in the code to create a new data frame of the average temperature November - April for years 1885 onward. **\[Add explanation about [hydroyear](https://lter.github.io/lterdatasampler/articles/ntl_icecover_vignette.html#investigate-the-relationship-between-ice-cover-duration-and-air-temperature)\].**

```{r}
#| eval: false
# Add a column to group the Fall and Spring season into a same year, similarly to what is done when defining hydrological year
ntl_airtemp_hydro <- ntl_airtemp %>%
  mutate(hydroyear = if_else(month(sampledate) < 10, year-1, year))

# Compute the average air temperature from Nov to April
ntl_airtemp_avg_winter <-  ntl_airtemp_hydro %>%
  _____(month(sampledate) %in% c(11:12,1:4)) %>% # filter the months from Nov to April
  _____(hydroyear) %>%
  summarise(avg_air_temp = ______)

## join to to ntl_icecover_avg and filter for years 1885 onward
ntl_joined_avg <- ntl_icecover_avg  %>%
  left_join(________, by = c("_____" = "______")) |>
  filter(year >= ______)

```

How many rows are in the new data frame? How many observations?

::: callout-important
You will use the `ntl_joined_avg` data frame for the remainder of lab.
:::

### Exercise 3

Create a histogram to examine the distribution of the response variable, `avg_ice_duration`, and calculate summary statistics for the center and spread of the distribution. Include informative axis labels and an informative title on the visualization.

Use the visualization and summary statistics to describe the distribution of `avg_ice_duration` (shape, center, spread, outliers).

### Exercise 4

Create a histogram to examine the distribution of the predictor variable, `avg_air_temp`, and calculate summary statistics for the center and spread of the distribution. Include informative axis labels and an informative title on the visualization.

Use the visualization and summary statistics to describe the distribution of `avg_air_temp` (shape, center, spread, outliers).

::: render-commit-push
This is a good place to render, commit, and push changes to your remote lab repo on GitHub. Click the checkbox next to each file in the Git pane to stage the updates you've made, write an informative commit message, and push. After you push the changes, the Git pane in RStudio should be empty.
:::

### Exercise 5

Fill in the code below to create a visualization of `avg_ice_duration` versus `year`. Use the visualization to write two observations about the trend of average ice duration over time.

```{r}
ggplot(data = ntl_joined_avg, aes(x = _____, y =_______)) +
  geom_line(alpha = 0.7) +
  labs(x = "_______", 
       y = "_______", 
       title = "__________")
```

### Exercise 6

Create a visualization of `avg_air_temp` versus `year`.

-   Use the visualization to write two observations about the trend of average air temperature over time.

-   Based on the visualizations of average ice duration and average air temperature over time, how would you describe the relationship between average ice duration and average air temperature?

### Exercise 7

You would like to fit a linear model using average air temperature to understand variability in the average ice duration. Write the form of the statistical model using appropriate notation.

::: render-commit-push
This is a good place to render, commit, and push changes to your remote lab repo on GitHub. Click the checkbox next to each file in the Git pane to stage the updates you've made, write an informative commit message, and push. After you push the changes, the Git pane in RStudio should be empty.
:::

### Exercise 8

Fit and neatly display the model from the previous exercise. Use the `kable` function to neatly display the model output to three decimal places.

-   Interpret the slope in the context of the data.

-   Does the intercept have a meaningful interpretation? If so, interpret it. Otherwise, explain why not.

### Exercise 9

We would like to answer the question "Do the data provide sufficient evidence of a linear relationship between average air temperature and average ice duration , i.e. $\beta_1$ is different from 0?"

To answer this question we will use a hypothesis test. We can conduct a hypothesis test via simulation (what we'll in this question) or using mathematical models (what we'll do in a later exercise).

-   Write the null and alternative hypotheses in words and using appropriate notation.

-   Test these hypotheses using a permutation test.

    -   First set a seed for simulating reproducibly.

    -   Use the permutation pipeline to simulate new samples from the original sample via permutation under the assumption that the null hypothesis is true and fit models to each of the samples and estimate the slope

    -   Create a histogram of the slope estimates in `perm_fits`. (Hint: Filter the dataset for just the slope values, `term == "avg_air_temp".`)

    -   Estimate the p-value of the hypothesis test based on this distribution.

    -   State your conclusion for the test in context.

### Exercise 10

Next, construct 95% confidence interval for the slope using bootstrapping. Follow these steps to accomplish this:

-   First set a seed for simulating reproducibly.
-   Then, simulate the bootstrap distribution of the slope using 1,000 bootstrap samples.
-   Then, visually estimate the bounds of the bootstrap interval based on a histogram of the distribution of the bootstrapped slopes, using the percentile method.
-   And then, use the `get_confidence_interval()` function to explicitly calculate the bounds of the confidence interval using the percentile method.
-   Interpret the confidence interval in the context of the data.
-   Indicate whether or not the confidence interval is consistent with the results of the hypothesis test from the previous exercise. Briefly explain your response.

::: render-commit-push
This is a good place to render, commit, and push changes to your remote lab repo on GitHub. Click the checkbox next to each file in the Git pane to stage the updates you've made, write an informative commit message, and push. After you push the changes, the Git pane in RStudio should be empty.
:::

# Submission

In this class, we'll be submitting PDF documents to Gradescope.

::: callout-warning
Before you wrap up the assignment, make sure all documents are updated on your GitHub repo. We will be checking these to make sure you have been practicing how to commit and push changes.

Remember -- you must turn in a PDF file to the Gradescope page before the submission deadline for full credit.
:::

To submit your assignment:

-   Go to <http://www.gradescope.com>and click *Log in* in the top right corner.
-   Click *School Credentials* `r emo::ji("arrow_right")` *Duke NetID* and log in using your NetID credentials.
-   Click on your *STA 210* course.
-   Click on the assignment, and you'll be prompted to submit it.
-   Mark the pages associated with each exercise. All of the pages of your lab should be associated with at least one question (i.e., should be "checked").
-   Select the first page of your .PDF submission to be associated with the *"Workflow & formatting"* section.

# Grading (50 pts)

<br>

| Component             | Points |
|:----------------------|:-------|
| Ex1 - 10              | 47     |
| Workflow & formatting | 3[^1]  |

[^1]: The "Workflow & formatting" grade is to assess the reproducible workflow. This includes having at least 3 informative commit messages and updating the name and date in the YAML.
